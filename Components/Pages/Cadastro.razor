@page "/Cadastro"

<div class="register-container">
    <div class="left-side">
        <h1>Anuncia Picos!</h1>
        <img src="images/logo.png" alt="Logo Anuncia Picos">
        <h2>Obrigado por fazer parte do Anuncia Picos! Estamos felizes em tê-lo conosco</h2>
        <p>"Descubra ofertas incríveis e negocie com facilidade no Anuncia Picos!"</p>
    </div>

    <div class="right-side">
        <h3>Cadastre-se gratuitamente e aproveite as melhores oportunidades</h3>

        <div id="statusMessage" style="position: relative; font-size: 14px; text-align: center; height: 20px; margin: 10px 0;"></div>

        <form id="registerForm">
            <div class="input-container">
                <label for="Name">Nome Completo:</label>
                <input type="text" id="Name" placeholder="Digite seu nome completo" required>
            </div>

            <div class="input-container">
                <label for="Email">Email:</label>
                <input type="email" id="Email" placeholder="Email" required>
            </div>

            <div class="input-container">
                <label for="CPF">CPF:</label>
                <input type="text" id="CPF" placeholder="Digite seu CPF" maxlength="14" required>
            </div>

            <div class="input-container">
                <label for="Phone">Telefone:</label>
                <input type="tel" id="Phone" placeholder="Digite seu telefone" maxlength="15" required>
            </div>

            <div class="input-container">
                <label for="Password">Senha:</label>
                <input type="password" id="Password" placeholder="Digite sua senha" required>
            </div>

            <div class="input-container">
                <label for="ConfirmPassword">Confirme sua Senha:</label>
                <input type="password" id="ConfirmPassword" placeholder="Confirme sua senha" required>
            </div>

            <div class="form-actions">
                <a href="/Login" class="cadlink">Já tem uma conta? FAÇA LOGIN</a>
                <button type="submit" class="register-btn">CADASTRAR</button>
            </div>
        </form>
    </div>
</div>

<script>
document.getElementById("registerForm").addEventListener("submit", async function (event) {
    event.preventDefault();

    const name = document.getElementById("Name").value.trim();
    const email = document.getElementById("Email").value.trim();
    const cpf = document.getElementById("CPF").value.replace(/\D/g, '');
    const phone = document.getElementById("Phone").value.replace(/\D/g, '');
    const password = document.getElementById("Password").value;
    const confirmPassword = document.getElementById("ConfirmPassword").value;
    const statusDiv = document.getElementById("statusMessage");

    statusDiv.textContent = "";

    // Validações básicas do frontend
    if (password !== confirmPassword) {
        exibirErro("As senhas não coincidem.");
        return;
    }

    if (password.length < 6) {
        exibirErro("A senha deve ter pelo menos 6 caracteres.");
        return;
    }

    const payload = {
        name: name,
        email: email,
        password: password,
        confirmPassword: confirmPassword,
        cpf: cpf,
        phone: phone
    };

    try {
        statusDiv.style.color = "blue";
        statusDiv.textContent = "Enviando dados...";

        const response = await fetch("https://api.anunciapicos.shop/auth/cadastro", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            },
            body: JSON.stringify(payload),
            mode: "cors"
        });

        if (response.ok) {
            const result = await response.json();
            const token = result.token;

            // Armazena o token e redireciona
            localStorage.setItem("authToken", token);
            statusDiv.style.color = "green";
            statusDiv.textContent = "Cadastro realizado com sucesso! Redirecionando...";
            setTimeout(() => {
                window.location.href = `/Home?token=${token}`;
            }, 1000);
        } else {
            const errorData = await response.json();
            const errorMessage = traduzirErroAPI(errorData.message || errorData.title || "Erro desconhecido");
            exibirErro(errorMessage);
        }
    } catch (error) {
        console.error("Erro na requisição:", error);
        exibirErro("Erro de conexão. Verifique sua internet ou tente novamente mais tarde.");
    }
});

function exibirErro(mensagem) {
    const statusDiv = document.getElementById("statusMessage");
    statusDiv.style.color = "red";
    statusDiv.textContent = mensagem;
}

// Função para traduzir os códigos de erro da API para mensagens em português
function traduzirErroAPI(codigoErro) {
    const mensagens = {
        "CPF_EMPTY": "CPF é obrigatório.",
        "CPF_EXISTS": "Este CPF já está cadastrado.",
        "CPF_INVALID": "CPF inválido.",
        "EMAIL_EMPTY": "Email é obrigatório.",
        "EMAIL_EXISTS": "Este email já está cadastrado.",
        "EMAIL_INVALID": "Email inválido.",
        "EMAIL_NOT_EXISTING": "Email não cadastrado no sistema.",
        "EMAIL_OR_PASSWORD_INVALID": "Email ou senha inválidos.",
        "NAME_EMPTY": "Nome é obrigatório.",
        "NAME_EXISTS": "Este nome de usuário já está cadastrado.",
        "NAME_INVALID": "Nome inválido.",
        "NAME_MAX_LENGTH": "Nome muito longo.",
        "NO_TOKEN": "Requisição não possui token.",
        "PASSWORD_DIFFERENT_CURRENT_PASSWORD": "A senha digitada é diferente da senha atual.",
        "PASSWORD_EMPTY": "Senha não pode estar vazia.",
        "PASSWORD_MINIUM": "Senha deve ter pelo menos 6 caracteres.",
        "PHONE_EMPTY": "Telefone é obrigatório.",
        "PHONE_INVALID": "Telefone inválido.",
        "TYPE_ACCOUNT_EMPTY": "Tipo de conta é obrigatório.",
        "TYPE_ACCOUNT_INVALID": "Tipo de conta inválido.",
        "UNKNOW_ERROR": "Erro desconhecido.",
        "USER_WITHOUT_PERMISSION_ACCESS_RESOURCE": "Você não tem permissão para acessar este recurso.",
        "PASSWORD_CONFIRM": "As senhas não coincidem.",
        "USER_NOT_FOUND": "Usuário não encontrado.",
        "USER_INACTIVE": "Usuário inativo.",
        "USER_NOT_ALLOWED": "Usuário não tem permissão."
    };

    return mensagens[codigoErro] || codigoErro;
}

// Formatação automática do CPF (apenas visual)
document.getElementById("CPF").addEventListener("input", function(e) {
    let value = e.target.value.replace(/\D/g, '');
    
    if (value.length > 11) {
        value = value.substring(0, 11);
    }
    
    value = value.replace(/(\d{3})(\d)/, '$1.$2');
    value = value.replace(/(\d{3})(\d)/, '$1.$2');
    value = value.replace(/(\d{3})(\d{1,2})$/, '$1-$2');
    
    e.target.value = value;
});

// Formatação automática do telefone (apenas visual)
document.getElementById("Phone").addEventListener("input", function(e) {
    let value = e.target.value.replace(/\D/g, '');
    
    if (value.length > 11) {
        value = value.substring(0, 11);
    }
    
    // Formatação para (DD) 9XXXX-XXXX
    if (value.length > 0) {
        value = value.replace(/^(\d{2})(\d)/g, "($1) $2");
    }
    if (value.length > 10) {
        value = value.replace(/(\d{5})(\d)/, "$1-$2");
    }
    
    e.target.value = value;
});
</script>